# -*- coding: utf-8 -*-
"""Alana Souza - 211_LP_Funcao_ss.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l_M0WqvVBBRNagraHSbGyaS8OKXE93YX

### 1. (Função sem retorno sem parâmetro) Faça um programa contendo uma função/método que apresente o valor 1 se o número digitado for positivo e 0 se for negativo.
"""

def PorN():
    number = float (input('Type a number:  '))
    if number >= 1:
        print('1')
    else:
        print('0')
def main():
    PorN()
main()

"""### 2. (Função sem retorno sem parâmetro) Faça uma função/método que leia dois valores positivos e apresente a soma dos N números existentes entre eles (inclusive). 
    Exemplo: 
        a = 2
        b = 8
        soma = 35
"""

def soma():
    a = int (input('Type a value:   '))
    b = int (input('Type an another value:  '))
    sum = 0
    while (a > 0 and b > 0) and a <= b:
        sum = sum + 1
        a = a + 1
    print('Result: ',sum)
    a = int (input('Type a value:   '))
    b = int (input('Type an another value:  '))
    sum = 0
    if (a > 0 and b > 0) and a <= b:
        for a in range(a,b+1):
            sum = sum + a
    print('Result: ',sum)
def main():
    soma()

"""### 3. (Função sem retorno sem parâmetro) Faça uma função/método que receba três números inteiros *a*, *b*, *c* que sejam divisíveis por ***a*** (inclusive *b* e *c*) e apresente a quantidade e os números divisíveis.
    Exemplo:
        a = 5
        b = 1
        c = 10
        qtde = 2
        Números divisíveis 5, 10
"""

def divisible():
    cont = 0
    a = int (input('Type a number for a: '))
    b = int (input('Type a number for b: '))
    c = int (input('Type a number for c: '))
    while b <= c:
        if b % a == 0:
            cont = cont + 1
            print('O número ',b,'é divisível por ',a)
        b = b + 1
    print('Apenas {} números foram encontrados, por serem divisíveis por {}'.format(cont,a))
def main():
    divisible()
main()

"""### 4. (Função sem retorno sem parâmetro) Faça uma função/método que leia um único valor representado em segundos, converta-o e apresente o resultado em horas, minutos e segundos.
    h = segundos / 3600
    r = resto(segundos / 3600)
    m = r / 60
    s = resto(r / 60)
    Observação 1: resto de uma divisão em Python %.
    Observação 2: a hora, o minuto e o segundo devem ser apresentados como números inteiros. 
"""

def Hours():
    segundos = int (input("Digite o valor: "))
    h = int (segundos / 3600)
    r = int (segundos % 3600)
    m = int (r/60)
    s = int (r/60)

    print("{} hora(s), {} min. e {} seg.".format(h, m, s))
def main():
    Hours()
main()

"""### 5. (Função sem retorno sem parâmetro) Faça uma função/método que receba o preço antigo e atual de um produto, determine o percentual de acréscimo entre esses valores e apresente-o.
    r = (100 * preco_novo - 100 * preco_antigo) / preco_antigo
"""

def percentual():
    precoAntigo = float (input('Insira o preço antigo do produto:   '))
    precoNovo = float (input('Insira o preço atual do produto:  '))
    r = round(100 * precoNovo - 100 * precoAntigo) / precoAntigo
    print('percentual é de {} %'.format(r))
def main():
    percentual()
main()

"""### 6. (Função sem retorno sem parâmetro) Faça uma função/método que leia um valor inteiro entre 1 e 9 e mostre a seguinte tabela de multiplicação
    1    
    2     4
    3     6     9
    4     8    12    16
    5    10    15    20    25
    6    12    18    24    30    36
    7    14    21    28    35    42    49
    8    16    24    32    40    48    56    64   
    9    18    27    36    45    54    63    72    81
    for i = 1 até n
       for j = 1 até i
       
    Observação: configure o print para não pular linha
"""

def multi():
    n = int (input('Informe o valor entre 1 e 9:    '))
    for i in range(1,n+1):
        for j in range(1,i+1):
            m = j + i
            print(m, end='\t')
        print()
def main():
    multi()
main()

"""### 7. (Função sem retorno sem parâmetro) Faça uma função/método que leia três notas de um aluno e uma letra, se a letra for igual a *A*, deverá calcular a média aritimética das notas dos alunos, se for *P*, deverá calcular a média ponderada, com pesos 5, 3 e 2. A média deve ser mostrada ao final."""

def media():
    nota1 = float (input('Digite a primeira nota    '))
    nota2 = float (input('Digite a segunda nota     '))
    nota3 = float (input('Digite a terceira nota    '))
    letra = str (input('Digite a letra A para saber a media aritmetica ou P para media ponderada '))
    if letra == 'a':
        mediaAritmetica = ( nota1 + nota2 + nota3 ) / 3
        print('Sua média é {} pontos'.format(mediaAritmetica))
    else:
        somaPesos = 5 + 3 + 2
        mediaPonderada = ( nota1 * 5 + nota2 * 3 + nota3 * 2) / 10
        print('Sua média ponderada é de {} pontos'.format(mediaPonderada))
def main():
    media()
main()

"""### 8. (Função sem retorno sem parâmetro) Faça uma função/método que leia uma hora de início e de término de um jogo, ambas divididas em dois valores distintos: hora e minuto. Deverá ser apresentado a duração expressa em minutos, considerando que o tempo máximo de duração de um jogo é de 24 horas e que ele pode começar em um dia e terminar no outro.
    se m_f < m_i
        m_f = m_f + 60
        h_f = h_f - 1
    se h_f < h_i
        h_f = h_f + 24
    tot_m = m_f - m_i
    tot_h = h_f - h_i
    total = tot_h * 60 + tot_m 
"""

def gameTime():
    h_i = int (input('Digite a hora inicial:    '))
    m_i = int (input('Digite o minuto inicial:    '))
    h_f = int (input('Digite a hora final:    '))
    m_f = int (input('Digite o minuto final:    '))
    if m_f < m_i:
        m_f = m_f + 60
        h_f = h_f - 1
    if h_f < h_i:
        h_f = h_f + 24
    tot_m = m_f - m_i
    tot_h = h_f - h_i
    total = tot_h * 60 + tot_m 
    print('A duração do jogo foi de {} horas e {} minutos.'.format(tot_h,tot_m))
def main():
    gameTime()
main()

"""### 9. (Função sem retorno sem parâmetro) Faça uma função/método que leia cinco valores inteiros, determine e mostre o maior e o menor deles"""

def MorM():
    primeiro = int (input('Primeiro numero: '))
    segundo  = int (input('Segundo numero : '))
    terceiro = int (input('Terceiro numero: '))
    quarto = int (input('Quarto numero: '))
    quinto = int (input('Quinto numero: '))
    maior = primeiro
    if (segundo > maior):
        maior = segundo
    if (terceiro > maior):
        maior = terceiro
    if (quarto > maior):
        maior = quarto
    if (quinto > maior):
        maior = quinto
    print('Maior: ',maior)
    menor = primeiro
    if (segundo < menor):
        menor = segundo
    if (terceiro < menor):
        menor = terceiro
    if (quarto > maior):
        menor = quarto
    if (quinto > maior):
        menor = quinto
    print('Menor: ',menor)
def main():
    MorM()
main

"""### 10. (Função sem retorno sem parâmetro) Faça uma função/método que leia um valor inteiro e positivo N e mostre o valor de S, obtido pelo seguinte cálculo: 
###S = 1  +  1/1!  +  1/2!  +  1/3!  + ... +  1/N!
"""

def fatorial():
    n = int (input('Digite um valor inteiro e positivo: '))
    i = 1
    n_fat = 1  
    while i <= n:
        n_fat = n_fat * i
        i = i + 1
        print("%d! = %d" %(n, n_fat))
def main():
    fatorial()
main()
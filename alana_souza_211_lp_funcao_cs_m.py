# -*- coding: utf-8 -*-
"""Alana Souza - 211_LP_Funcao_cs_m.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UpjdjOm502Ghy5SwC5mDVnGN0iLaTkA9

### 1. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia um número e o multiplique por 2 retornando o resultado, apresente o resultado da função.
"""

def multiplicar():
	n = int (input('Informe um valor:	')
	r = n * 2
	return r
def main():
	w = multiplicar()
	print('1 - O resultado é',w)
main()

"""### 2. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método para subtrair dois números, retornar o resultado e o apresentando."""

def sub():
    num1 = float (input('Digite um numero: '))
    num2 = float (input('Digite um numero:  '))
    subtracao = num1 - num2
    return subtracao
def main():
    subtracao = sub()
    print('Resultado:',subtracao)
main()

"""### 3. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia a base e a altura de um triângulo e retorne/apresente sua área (A = (base x altura)/2)."""

def triangle():
    base = float (input('Digite a base do triangulo:    '))
    altura = float (input('Digite a altura do triangulo:    '))
    area = (base * altura) / 2
    return area
def main():
    area = triangle()
    print('A area é',area)
main()

"""### 4. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia o lado de um quadrado e retorne sua área (A = lado2). Observação o número 2 significa ao quadrado."""

def quadrado():
    lado = float (input('Digite o lado de um quadrado:  '))
    area = lado ** 2
    return area
def main():
    area = quadrado()
    print('A area é',area)
main()

"""###5. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método  que verifique se um número é par, retorne mostrando a str/string ‘É par’ ou se ‘É ímpar’."""

def parOUimpar():
    numero = float (input('Informe um valor:    '))
    return numero
    if (numero % 2 == 0):
        print('Par')
    else:
        print("Ímpar")
def main():
    numero = parOUimpar()
main()

"""###6. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método  que verifique se um número é par, retorne/mostre o valor bool True para par e False para ímpar."""

def par():
    num = int (input('Digite um numero:  '))
    return num
def main():
    if num % 2 == 0:
        print(True)
    else:
        print(False)
num = par()
main()

"""### 7. (Função com retorno sem parâmetro) Faça uma função/método que leia e armazene 5 elementos inteiros no vetor A, deverá ser gerado um vetor B, de mesmo tamanho, que armazenará o fatorial de cada elemento de A. Retorne/apresente o vetor B."""

def fatorial ():
    vetora = []
    vetorb = []
    i = 0
    vetora = input("digite cinco números separados por espaço >>").split(' ') 
    for fatorar in vetora:
        resultado = 1
        while int(fatorar) > 1:
            resultado = resultado * int(fatorar)
            fatorar = int(fatorar) - 1
        vetorb.append(resultado)
    return vetorb
def main ():
    m = fatorial ()
    print(m)
main()

"""### 8. (Função com retorno sem parâmetro) Faça uma função/método retorne um vetor com os três primeiros números perfeitos. Sabe-se que um número é perfeito quando é igual a soma de seus divisores (exceto ele mesmo). Exemplo: os divisores de 6 são 1, 2 e 3, e 1 + 2 + 3 = 6, logo 6 é perfeito."""

import math
def perfeito(n_min, n_max):
    lista = []
    for n in range(n_min, n_max + 1):
        soma = 1
        for div in range(2, math.ceil(math.sqrt(n))):
            if n % div == 0:
                soma += div
                div2 = int(n / div)
                if (div != div2):
                    soma += div2
                if soma > n:
                    break
        if n == soma:
            lista.append(n)
    return lista

print(perfeito(33550335, 33550337))

"""### 9. (Função com retorno sem parâmetro) Foi realizada uma pesquisa sobre algumas características físicas de cinco habitantes de uma região. Foram coletados os seguintes dados de cada habitante: idade, sexo (M - masculino ou F - feminino), cor dos olhos (A - azuis ou C - castanhos), cor dos cabelos (L - louros, P - pretos ou C - castanhos).
* Faça uma função/método que leia esses dados, armazenando-os em vetores (listas);
* Faça uma função/método que determine e devolva a função principal a média de idades das pessoas com olhos castanhos e cabelos pretos.
* Faça uma função/método que determine e devolva a função principal a maior idade entre os habitantes.
* Faça uma função/método que determine e devolva a função principal a quantidade de indivíduos do sexo feminino com idade entre 18 e 35 anos(inclusive) e que tenham olhos azuis e cabelos louros.

"""

idade = [] # seus vetores tem visibilidade global a todas as funções
sexo = []
olhos = []
cabelos = []

def caracteristicas():
    opcao = input('Deseja cadastrar outro (s/n)?  ')
    while opcao == 's':
        idade.append(int (input('Digite a idade: ')))
        sexo.append(str (input('Digite o gênero (M ou F):    ')))
        olhos.append(str (input('Digite a cor dos olhos (A - azuis ou C - castanhos):    ')))
        cabelos.append(str (input('Digite a cor dos cabelos (L - louros, P - pretos ou C - castanhos):   ')))
        opcao = input('Deseja cadastrar outro (s/n)?  ')

def media():
    cont = 0
    soma_idade = 0
    for i in range(len(idade)):
        if (olhos[i] == 'c' or olhos[i] == 'C') and (cabelos[i] == 'p' or cabelos[i] == 'P'):
            cont = cont + 1
            soma_idade = soma_idade + idade[i]
    media_idade = soma_idade / cont
    return media_idade 

def maior(): # 20   31   42   7   9
    for i in range(len(idade)):
        if i == 0:
            maioridade = idade[i]
        if idade[i] >= maioridade:
            maioridade = idade[i]
    return maioridade

def feminino():
    cont = 0
    for i in range(len(sexo)):
        if sexo[i] == 'f' or sexo[i] == 'F':
            if (idade[i] >= 18 and idade[i] <= 35) and (olhos[i] == 'a' or olhos[i] == 'A') and (cabelos[i] == 'l' or cabelos == 'L'):
                cont = cont + 1
    return cont

def main():
    caracteristicas()
    print('A média de idade de pessoas com cabelo preto e olho castanho é',media(),'anos.')
    print('A maior idade é:',maior())
    print('A quantidade de indivíduos do sexo feminino com idade entre 18 e 35 anos e que tem olhos azuis e cabelos louros é de:',feminino())

main()